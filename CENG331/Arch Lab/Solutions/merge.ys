# AYTAC SEKMEN 2575983
.pos 0x0
init:
    irmovq stack, %rsp
    irmovq array_begin1, %rdi
    irmovq array_end1, %rsi
    irmovq array_begin2, %rdx
    irmovq array_end2, %rcx
    irmovq array_begin3, %r8
    call merge
    halt

#implement your code below (DO NOT CHANGE/REMOVE THIS COMMENT)

merge:
    rrmovq %rdi, %r12  #r12=begin1
    rrmovq %rsi, %r9   #r9=end1
    rrmovq %rdx, %r10 #r10=begin2
    rrmovq %rcx, %r11 #r11=end2
    rrmovq %r8, %r13  #r13=begin3
    jmp controlloop1
    
controlloop1:
    rrmovq %r9,%r14
    subq %r12,%r9
    rrmovq %r14,%r9
    jg controldevam
    jmp controlloop3

controldevam:
   rrmovq %r11, %r14
   subq %r10,%r11
   rrmovq %r14, %r11
   jg loop1
   jmp controlloop2

loop1:
   mrmovq (%r10), %r14 #r14 is temporary value holder
   mrmovq (%r12), %rbp
   subq %rbp,%r14
   jg loop1cond1
   jmp loop1cond2

loop1cond1:
   mrmovq (%r12),%r14
   rmmovq %r14, (%r13)
   irmovq $8, %r14
   addq %r14, %r12
   addq %r14, %r13
   jmp controlloop1
loop1cond2:
   mrmovq(%r10),%r14
   rmmovq %r14, (%r13)
   irmovq $8, %r14
   addq %r14, %r10
   addq %r14, %r13
   jmp controlloop1
   
controlloop2:
   rrmovq %r9,%r14
   subq %r12,%r9
   rrmovq %r14,%r9
   jg loop2
   jmp loop3

loop2:
   mrmovq(%r12),%r14
   rmmovq %r14, (%r13)
   irmovq $8, %r14
   addq %r14, %r12
   addq %r14, %r13
   jmp controlloop2

controlloop3:
   rrmovq %r11, %r14
   subq %r10,%r11
   rrmovq %r14, %r11
   jg loop3
   jmp son

loop3:
   mrmovq(%r10),%r14
   rmmovq %r14, (%r13)
   irmovq $8, %r14
   addq %r14, %r10
   addq %r14, %r13
   jmp controlloop3

son:
    ret

#implement your code above (DO NOT CHANGE/REMOVE THIS COMMENT)

.pos 0x1008
array_begin1:
    .quad 1
    .quad 2
    .quad 3
    .quad 5
    .quad 17
    .quad 18
    .quad 19
    .quad 110
array_end1:
    .quad 0
array_begin2:
    .quad 10
    .quad 11
    .quad 12
    .quad 200
    .quad 201
    .quad 202
    .quad 203
    .quad 204
array_end2:
    .quad 0
.pos 0x1500
array_begin3:
    .quad 0
.pos 0x1F00
stack:
    .quad 0


